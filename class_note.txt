필수라이브러리
pandas 데이터 처리
matplotlib 데이터 시각화
seaborn 시각화
numpy 수학
scikit learn 머신러닝
tensorflow 딥러닝
keras 딥러닝
pytorch 딥러닝
scipy
nltk
------
plotly
folium
xgboost, lightgdm

datetime
glob
random
timer
--------
optuna
hyperopt
statmodels
pycaret

2022/07/11

기본 라이브러리
pandas : 데이터 다루는 라이브러리(데이터 처리)
seaborn, matplotlib : 시각화 라이브러리

GUI Programming : tkinter

머신러닝 라이브러리 : scikit-learn 
딥러닝 라이브러리 : tensorflow, pytorch, keras

----------------------------------------------
column 통계학 -> 변수, 머신러닝 -> 특성,피처, 특징
지도 학습은 출력이 있어야함
딥러닝은 이미지나 시계열 데이터 일떄 좋음

# 딥러닝 데이터 전처리
5 -> 00001000
3 -> 0001000000

---------------------------------------------------------------------------
20220718

ANN, DNN, CNN, RNN

#완전 연결층(FCL - Fully Connected Layer) 전체 뉴런이 연결되어 있다.

#합성곱 신경만
Convolution Layer 
	- 이미지가 있을 떄 필터가 존지하고, 필터를 stride 하면서 합성곱 연산을 통해 값을 요약 및 압축
	- 스트라이드의 개념 : 이동 간격
	- 스트라이드 1, 2 결과의 차이 : 
		4x4 필터 3x3 스트라이드 1 : 2x2
		4x4 필터 3x3 스트라이드 2 : 옮겼을 때, 실제 데이터 범위 벗어나면 계산되지 않음
	- 필터와 이미지의 합성곱 연산을 통해서 생성되는 결과물 : 특징맵(featur map) or Activation map
	- 3x3 필터를 16개를 씀, 특징맵의 갯수 : 16개
	- 28, 28, 3 -> 3x3 필터의 개수 16개 -> 가중치의 개수 : 3x3x16x3 + 16x1
	
	
	- CNN의 장점
		- 파라미터를 줄여주다.
		- 공간 정보 손실을 방지해 준다.
		
	- 풀링 계층
		A. MaxPooling - 가장 큰 값을 가져온다.
		B. AveragePooling - 평균
		C. MinPooling - 낮은 값
		- 가중치가 없음
		
	- 패딩
		A. zero padding이 이루어지면, 결과물은 사이즈가 그대로 유지
		B. 특성맵 이미지가 줄어드는 것을 막기위해 고안된 방법.
	
	- 배치 사이즈가
		A. 1회 학습에 데이터를 쪼개서 돌린다. 그 사이즈를 가리킴
		
		
---------------------------------------------------------------------------------------------------------------
220718

### 데이터
([샘플의 개수], 가로, 세로, [채널개수])

### 딥러닝
 - 이진 분류 (예: 개고양이 분류, 타이타닉 생존자 예측)
	맨 마지막층 뉴런의 구조 : 한개의 뉴런, 활성화 함수(sigmoid)
	loss : binary_crossentropy
	
 - 다항 분류
	맨 마지막층 뉴런의 구조 : 활성화 함수(softmax), 범주의 개수만큼 뉴런필요
	loss : categorical_crossentropy
	
 - 연속형 변수 예측
	맨 마지막층 뉴런의 구조 : 뉴런의 개수 1개, 활성화 함수(없음)